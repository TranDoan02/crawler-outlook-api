"""
Migration script ƒë·ªÉ th√™m b·∫£ng users v√† c·∫≠p nh·∫≠t b·∫£ng accounts
Ch·∫°y script n√†y ƒë·ªÉ c·∫≠p nh·∫≠t database schema
"""
from sqlalchemy import create_engine, text
from database import DATABASE_URL

def run_migration():
    """Ch·∫°y migration ƒë·ªÉ th√™m b·∫£ng users v√† c·∫≠p nh·∫≠t accounts"""
    engine = create_engine(DATABASE_URL)
    
    with engine.connect() as connection:
        # T·∫°o b·∫£ng users
        print("üîÑ T·∫°o b·∫£ng users...")
        connection.execute(text("""
            CREATE TABLE IF NOT EXISTS users (
                id SERIAL PRIMARY KEY,
                email VARCHAR(255) UNIQUE NOT NULL,
                password_hash VARCHAR(255) NOT NULL,
                role VARCHAR(50) DEFAULT 'user',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """))
        
        # Th√™m index cho email
        connection.execute(text("""
            CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
        """))
        
        # Th√™m tr∆∞·ªùng user_id v√†o b·∫£ng accounts n·∫øu ch∆∞a c√≥
        print("üîÑ C·∫≠p nh·∫≠t b·∫£ng accounts...")
        try:
            connection.execute(text("""
                ALTER TABLE accounts ADD COLUMN IF NOT EXISTS user_id INTEGER;
            """))
        except Exception as e:
            print(f"‚ö†Ô∏è Tr∆∞·ªùng user_id c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i: {e}")
        
        # Th√™m foreign key constraint
        try:
            connection.execute(text("""
                ALTER TABLE accounts 
                ADD CONSTRAINT fk_accounts_user_id 
                FOREIGN KEY (user_id) REFERENCES users(id);
            """))
        except Exception as e:
            print(f"‚ö†Ô∏è Foreign key constraint c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i: {e}")
        
        # Commit changes
        connection.commit()
        
        print("‚úÖ Migration ho√†n th√†nh!")
        print("üìã C√°c thay ƒë·ªïi:")
        print("   - T·∫°o b·∫£ng users v·ªõi c√°c tr∆∞·ªùng: id, email, password_hash, role, created_at, updated_at")
        print("   - Th√™m tr∆∞·ªùng user_id v√†o b·∫£ng accounts")
        print("   - Th√™m foreign key constraint gi·ªØa accounts v√† users")

if __name__ == "__main__":
    run_migration() 